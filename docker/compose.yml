services:
  meipu-agi-proxy:
    image: meipu-agi-proxy
    container_name: meipu-agi-proxy
    command: ['/app/entrypoint.sh']
    environment:
      CHUTES_API_TOKEN: ${CHUTES_API_TOKEN}
      MYSQL_HOST: mysql
      MYSQL_PORT: ${MYSQL_PORT:-3306}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      KIKAKKZ_WECHAT_OPENID: ${KIKAKKZ_WECHAT_OPENID}
      FILE_SERVER: ${FILE_SERVER}
      CONCURRENT_AUDIO_REQUESTS: ${CONCURRENT_AUDIO_REQUESTS}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET: ${AWS_BUCKET}
      WEAPP_MINI_ID: ${WEAPP_MINI_ID}
      WEAPP_MINI_SECRET: ${WEAPP_MINI_SECRET}
      WEAPP_WEB_ID: ${WEAPP_WEB_ID}
      WEAPP_WEB_SECRET: ${WEAPP_WEB_SECRET}
      REVIEWER_WECHAT_OPENIDS: ${REVIEWER_WECHAT_OPENIDS}
    volumes:
      - meipu_agi_data:/data
    depends_on:
      mysql:
        condition: service_healthy
  meipu-agi-webui:
    image: meipu-agi-webui
    container_name: meipu-agi-webui
    command: ['nginx', '-g', 'daemon off;']
  file-server:
    image: file-server
    container_name: file-server
    command: ['/entrypoint.sh']
    volumes:
      - meipu_agi_data:/data
  meipu-agi-gateway:
    image: meipu-agi-gateway
    container_name: meipu-agi-gateway
    ports:
      - 80:80
    command: ['nginx', '-g', 'daemon off;']
  mysql:
    image: mysql:8
    container_name: mysql
    command: ["mysqld", "--mysql-native-password=ON"]
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
    name: mysql_data
  meipu_agi_data:
    name: meipu_agi_data
